name: CI/CD (PR build; main deploy)

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: read
  packages: write # push to GHCR on main

jobs:
  # --- PR build only ---
  pr-build:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: false
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository_owner }}/albear-t:pr-check

  # --- Build & push on main (hosted runner) ---
  build-and-push:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/albear-t:latest
            ghcr.io/${{ github.repository_owner }}/albear-t:${{ github.sha }}

  # --- Deploy on EC2 self-hosted runner ---
  deploy:
    needs: build-and-push
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: [self-hosted, prod] # <-- matches the labels you set
    steps:
      - name: Ensure workspace writable
        run: |
          sudo chown -R "$USER":"$USER" "$GITHUB_WORKSPACE" || true
          sudo rm -rf "$GITHUB_WORKSPACE"/* "$GITHUB_WORKSPACE"/.[!.]* "$GITHUB_WORKSPACE"/..?* || true
      - uses: actions/checkout@v4
      - name: Docker login to GHCR (pull permissions)
        run: |
          echo "${GHCR_PAT}" | docker login ghcr.io -u "${GITHUB_ACTOR}" --password-stdin
        env:
          GHCR_PAT: ${{ secrets.GHCR_PAT }} # repo secret with read:packages

      - name: Pull & restart via Compose
        run: |
          docker compose -f deploy/docker-compose.prod.yml pull
          docker compose -f deploy/docker-compose.prod.yml up -d
          docker image prune -f
